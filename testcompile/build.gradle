apply plugin: 'com.android.library'

android {
    compileSdkVersion COMPILE_SDK_VERSION as int



    defaultConfig {
        minSdkVersion MIN_SDK_VERSION as int
        targetSdkVersion TARGET_SDK_VERSION as int
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

//下面的的都是需要添加的
task deleteOldJar(type: Delete) {
    delete 'build/outputs/test.jar'
}
task exportJar(type: Copy) {
    from('build/intermediates/intermediate-jars/release/')//3.0之前的版本是（build/intermediates/bundles/release/）之后发生了变化
    into('build/libs/')//输出路径,自定义
    include('classes.jar')
    rename ('classes.jar', 'test.jar')//后面的是jar包名,自定义
}

exportJar.dependsOn(deleteOldJar, build)